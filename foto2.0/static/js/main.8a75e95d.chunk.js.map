{"version":3,"sources":["App.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Component","ORIENTATION_PORTRAIT","ORIENTATION_LANDSCAPE","updateStyle","bind","assertThisInitialized","generateContainerStyles","handleDeviceOrientationChange","state","containerStyles","images","Array","from","keys","map","x","original","thumbnail","orientation","getDeviceOrientation","window","addEventListener","Math","abs","setState","newWidth","innerHeight","innerWidth","height","width","margin","sizes","calculateDimensions","concat","removeEventListener","react_default","a","createElement","style","image_gallery_default","items","slideInterval","showThumbnails","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"sRAgGeA,2BAzFX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMI,eACDC,qBAAuB,EAC5BR,EAAKS,sBAAwB,EAC7BT,EAAKU,YAAcV,EAAKU,YAAYC,KAAjBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACnBA,EAAKa,wBAA0Bb,EAAKa,wBAAwBF,KAA7BV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAC/BA,EAAKc,8BAAgCd,EAAKc,8BAA8BH,KAAnCV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAErCA,EAAKe,MAAQ,CACTC,gBAAiBhB,EAAKa,0BACtBI,OAAQC,MAAMC,KAAKD,MAAM,GAAGE,QACvBC,IAAI,SAAUC,GACX,MAAO,CACHC,SAAU,4CAA8CD,EAAI,GAAK,QACjEE,UAAW,4CAA8CF,EAAI,GAAK,WAG9EG,YAAazB,EAAK0B,wBAjBZ1B,mFAuBV2B,OAAOC,iBAAiB,SAAUzB,KAAKO,aACvCiB,OAAOC,iBAAiB,oBAAqBzB,KAAKW,8EAIpD,OAAqC,KAAjCe,KAAKC,IAAIH,OAAOF,aACXtB,KAAKM,sBAELN,KAAKK,6EAKdL,KAAK4B,SAAS,CAACN,YAAatB,KAAKuB,yBACjCvB,KAAKO,4DAIH,IAAIsB,EAA8B,KAAnBL,OAAOM,YAKtB,OAJID,EAAWL,OAAOO,aAClBF,EAAWL,OAAOO,YAGf,CACHC,OAAQR,OAAOM,YACfG,MAAOJ,qDAKb,GAAI7B,KAAKuB,uBACP,MAAO,CACLU,MAAO,OACPD,OAAQ,OACRE,OAAQ,QAGV,IAAIC,EAAQnC,KAAKoC,sBACjB,MAAO,CACHH,MAAK,GAAAI,OAAKF,EAAMF,MAAX,MACLD,OAAM,GAAAK,OAAKF,EAAMH,OAAX,MACNE,OAAQ,8CAMZlC,KAAK4B,SAAS,CACVf,gBAAiBb,KAAKU,2EAK1Bc,OAAOc,oBAAoB,SAAUtC,KAAKO,8CAI1C,OACIgC,EAAAC,EAAAC,cAAA,OAAKC,MAAO1C,KAAKY,MAAMC,iBACnB0B,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAcI,MAAO5C,KAAKY,MAAME,OAAQ+B,cAAe,IACrDC,eAAgB9C,KAAKY,MAAMU,cAAgBtB,KAAKK,+BArFhDD,cCAlB2C,IAASC,OAAOT,EAAAC,EAAAC,cAACQ,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.8a75e95d.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport ImageGallery from 'react-image-gallery';\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport './App.css';\n\nclass App extends Component {\n\n    constructor() {\n        super(Component);\n        this.ORIENTATION_PORTRAIT = 0;\n        this.ORIENTATION_LANDSCAPE = 1;\n        this.updateStyle = this.updateStyle.bind(this);\n        this.generateContainerStyles = this.generateContainerStyles.bind(this);\n        this.handleDeviceOrientationChange = this.handleDeviceOrientationChange.bind(this);\n\n        this.state = {\n            containerStyles: this.generateContainerStyles(),\n            images: Array.from(Array(9).keys())\n                .map(function (x) {\n                    return {\n                        original: \"./assets/mihalykoles/g_koles_mihaly_0000\" + (x + 1) + \".jpeg\",\n                        thumbnail: \"./assets/mihalykoles/g_koles_mihaly_0000\" + (x + 1) + \".jpeg\"\n                    }\n                }),\n            orientation: this.getDeviceOrientation(),\n        };\n    }\n\n    componentDidMount() {\n        // Additionally I could have just used an arrow function for the binding `this` to the component...\n        window.addEventListener(\"resize\", this.updateStyle);\n        window.addEventListener(\"orientationchange\", this.handleDeviceOrientationChange)\n    }\n\n    getDeviceOrientation() {\n      if (Math.abs(window.orientation) === 90) {\n        return this.ORIENTATION_LANDSCAPE;\n      } else {\n        return this.ORIENTATION_PORTRAIT;\n      }\n    }\n\n    handleDeviceOrientationChange() {\n      this.setState({orientation: this.getDeviceOrientation()});\n      this.updateStyle();\n    }\n\n    calculateDimensions() {\n        let newWidth = window.innerHeight*1.57;\n        if (newWidth > window.innerWidth) {\n            newWidth = window.innerWidth;\n        }\n\n        return {\n            height: window.innerHeight,\n            width: newWidth,\n        };\n    }\n\n    generateContainerStyles() {\n      if (this.getDeviceOrientation()) {\n        return {\n          width: '100%',\n          height: 'auto',\n          margin: 'auto'\n        };\n      } else {\n        let sizes = this.calculateDimensions();\n        return {\n            width: `${sizes.width}px`,\n            height: `${sizes.height}px`,\n            margin: 'auto'\n        };\n      }\n    }\n\n    updateStyle() {\n        this.setState({\n            containerStyles: this.generateContainerStyles()\n        });\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateStyle);\n    }\n\n    render() {\n        return (\n            <div style={this.state.containerStyles}>\n                <ImageGallery items={this.state.images} slideInterval={10000}\n                  showThumbnails={this.state.orientation === this.ORIENTATION_PORTRAIT}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}