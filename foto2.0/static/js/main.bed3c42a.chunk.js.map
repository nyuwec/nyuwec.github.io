{"version":3,"sources":["App.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Component","state","containerStyles","generateContainerStyles","images","Array","from","keys","map","x","original","thumbnail","orientation","updateStyle","bind","assertThisInitialized","handleDeviceOrientationChange","window","addEventListener","Math","abs","setState","newWidth","innerHeight","innerWidth","height","width","margin","sizes","calculateDimensions","concat","removeEventListener","react_default","a","createElement","style","image_gallery_default","items","slideInterval","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"sRAuFeA,2BAjFX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMI,eACDC,MAAQ,CACTC,gBAAiBT,EAAKU,0BACtBC,OAAQC,MAAMC,KAAKD,MAAM,GAAGE,QACvBC,IAAI,SAAUC,GACX,MAAO,CACHC,SAAU,4CAA8CD,EAAI,GAAK,QACjEE,UAAW,4CAA8CF,EAAI,GAAK,WAG9EG,YAAa,YAEjBnB,EAAKoB,YAAcpB,EAAKoB,YAAYC,KAAjBpB,OAAAqB,EAAA,EAAArB,QAAAqB,EAAA,EAAArB,CAAAD,KACnBA,EAAKU,wBAA0BV,EAAKU,wBAAwBW,KAA7BpB,OAAAqB,EAAA,EAAArB,QAAAqB,EAAA,EAAArB,CAAAD,KAC/BA,EAAKuB,8BAAgCvB,EAAKuB,8BAA8BF,KAAnCpB,OAAAqB,EAAA,EAAArB,QAAAqB,EAAA,EAAArB,CAAAD,KAf3BA,mFAoBVwB,OAAOC,iBAAiB,SAAUtB,KAAKiB,aACvCI,OAAOC,iBAAiB,oBAAqBtB,KAAKoB,uFAIf,KAAjCG,KAAKC,IAAIH,OAAOL,aAClBhB,KAAKyB,SAAS,CAACT,YAAa,cAE5BhB,KAAKyB,SAAS,CAACT,YAAa,aAE9BhB,KAAKiB,4DAIH,IAAIS,EAA8B,KAAnBL,OAAOM,YAKtB,OAJID,EAAWL,OAAOO,aAClBF,EAAWL,OAAOO,YAGf,CACHC,OAAQR,OAAOM,YACfG,MAAOJ,qDAKb,GAAI1B,KAAKK,OAAoC,cAA3BL,KAAKK,MAAMW,YAC3B,MAAO,CACLc,MAAO,OACPD,OAAQ,OACRE,OAAQ,QAGV,IAAIC,EAAQhC,KAAKiC,sBACjB,MAAO,CACHH,MAAK,GAAAI,OAAKF,EAAMF,MAAX,MACLD,OAAM,GAAAK,OAAKF,EAAMH,OAAX,MACNE,OAAQ,8CAMZ/B,KAAKyB,SAAS,CACVnB,gBAAiBN,KAAKO,2EAK1Bc,OAAOc,oBAAoB,SAAUnC,KAAKiB,8CAI1C,OACImB,EAAAC,EAAAC,cAAA,OAAKC,MAAOvC,KAAKK,MAAMC,iBACnB8B,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAcI,MAAOzC,KAAKK,MAAMG,OAAQkC,cAAe,cA5ErDtC,cCAlBuC,IAASC,OAAOR,EAAAC,EAAAC,cAACO,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.bed3c42a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport ImageGallery from 'react-image-gallery';\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super(Component);\n        this.state = {\n            containerStyles: this.generateContainerStyles(),\n            images: Array.from(Array(9).keys())\n                .map(function (x) {\n                    return {\n                        original: \"./assets/mihalykoles/g_koles_mihaly_0000\" + (x + 1) + \".jpeg\",\n                        thumbnail: \"./assets/mihalykoles/g_koles_mihaly_0000\" + (x + 1) + \".jpeg\"\n                    }\n                }),\n            orientation: 'portrait',\n        };\n        this.updateStyle = this.updateStyle.bind(this);\n        this.generateContainerStyles = this.generateContainerStyles.bind(this);\n        this.handleDeviceOrientationChange = this.handleDeviceOrientationChange.bind(this);\n    }\n\n    componentDidMount() {\n        // Additionally I could have just used an arrow function for the binding `this` to the component...\n        window.addEventListener(\"resize\", this.updateStyle);\n        window.addEventListener(\"orientationchange\", this.handleDeviceOrientationChange)\n    }\n\n    handleDeviceOrientationChange() {\n      if (Math.abs(window.orientation) === 90) {\n        this.setState({orientation: 'landscape'});\n      } else {\n        this.setState({orientation: 'portrait'});\n      }\n      this.updateStyle();\n    }\n\n    calculateDimensions() {\n        let newWidth = window.innerHeight*1.57;\n        if (newWidth > window.innerWidth) {\n            newWidth = window.innerWidth;\n        }\n\n        return {\n            height: window.innerHeight,\n            width: newWidth,\n        };\n    }\n\n    generateContainerStyles() {\n      if (this.state && this.state.orientation === 'landscape') {\n        return {\n          width: '100%',\n          height: '100%',\n          margin: 'auto'\n        };\n      } else {\n        let sizes = this.calculateDimensions();\n        return {\n            width: `${sizes.width}px`,\n            height: `${sizes.height}px`,\n            margin: 'auto'\n        };\n      }\n    }\n\n    updateStyle() {\n        this.setState({\n            containerStyles: this.generateContainerStyles()\n        });\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateStyle);\n    }\n\n    render() {\n        return (\n            <div style={this.state.containerStyles}>\n                <ImageGallery items={this.state.images} slideInterval={10000}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}